// =====================================================================
// SuperCollider Workspace
// =====================================================================

/*
	Code to use data generated by the opencern offline system
	created with OpenCern: http://opendata.cern.ch/getting-started/CMS
*/
p = File.getcwd.dirname +/+ "NodeJS/jsonfiles/";

j = JSONFileReader.read(p +/+ "data.json");
~data = j.asArray.at(0).asFloat;

p = Pbind(\dur, 0.1, \freq, Pseq(~data.midicps)).play; //test

p.stop;

(
Tdef(\oscStream,
	{
		~timeInterval = 1;
		~valuePointer = 0;
		loop{
			if(~data.notNil){
				~valuePointer = ~valuePointer + 1 % ~data.size;
				~dataOSC = ~data[~valuePointer];
				//~addrBook.sendAll('/stream', ~dataOSC.asFloat); //sends to all Utopians.
				~dataOSC.postln;
			};
			~timeInterval.wait;
		}.fork;
	});
)

// a window including a slider and button to control and start/stop streaming.
(
w = Window.new(bounds:Rect(100, 100, 300, 80)).layout_(
	VLayout(
		HLayout(
			Button(parent:w)
			.states_([
				["streamOFF"],
				["streamON"]
			])
			.action_({|butt|
				if(butt.value == 1){
					Tdef(\oscStream).play
				}{
					Tdef(\oscStream).pause
				};
			}),
			Slider(parent:w)
			.action_({|sl|
				~timeInterval = sl.value.round(0.01).max(0.01).lag(0.3)
			})
			.value_(1.0)
			.orientation_(\horizontal)
		)
	)
).front;
w.onClose_({ Tdef(\oscStream).stop; })
);